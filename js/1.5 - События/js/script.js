console.log("1.5")

// Есть три способа назначения обработчиков событий:
// 1. Атрибут HTML: onclick="...".
// 2. DOM-свойство: elem.onclick = function.
// 3. Специальные методы: 
// - elem.addEventListener(event, handler[, phase]) - для добавления
// - removeEventListener - для удаления




console.log(myBtn.onclick);

myBtn.onclick = function () {
    console.log("other event")
}

console.log(myBtn.onclick);


// Специальный метод -  addEventListener

// 1й аргумент - имя события, которое мы хотим отслеживать
// 2й аргумент - функция, которую браузер выполнит, когда указанное в первом аргументе событие произойдёт


// HTML-атрибуты используются редко потому, что JavaScript в HTML-теге выглядит немного странно. К тому же много кода там не напишешь.

// DOM-свойства вполне можно использовать, но мы не можем назначить больше одного обработчика на один тип события. Во многих случаях с этим ограничением можно мириться.

// Последний способ самый гибкий, однако нужно писать больше всего кода. Есть несколько типов событий, которые работают только через него, к примеру transitionend и DOMContentLoaded. 


// С помощью жс мы можем получить доступ к элементам нашего ДОМ дерева. Считывать информацию с них. Изменять элементы. Отслеживать события, которые происходят на этих элементах и на странице- клики, движения мышью, нажатия на клавиатуру и  многое другое . Любое событие можно отследить, перехватить и повесить на это событие слушатель. И каждый раз когда событие случилось, то выполнить функцию, которую мы записали вторым аргументом.